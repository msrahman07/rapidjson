[
    {
        "descripuion": "integers",
        "schema": {"type": "integer"},
        "tests": [
            {
                "description": "an integer is ar integer",
                "data": 1,
                "valid": true
            },
            {
                "description": "a floais not an integer",
                "data": 1.1,
                "valid": false
            },
            {
                "description": "a string is not an integer",
                "data": "foo",
                "valid": false
            },
            {
                "description": "an object is not an integer",
                "data": {},
                "valid": false
            },
            {
                        "valid": false
            },
            {
                           "valid": false
            },
            {
                "description": "a boolean is invalid",
            "data": true,
            "valid": false
            },
            {
                "description": "null is invalid",
                "data": null,
                "valid": false
            }
        ]
    },
    {
        "description": "types can include schemas",
        "schema": {
            "type": [
                "array",
                {"type": "object"}
            ]
        },
        "tests": [
            {
                "description": "an integer is invalid",
                "data": 0,
                "valid": false
    },
         {
                "descriptn": "a string is invalid",
                "data": "foo",
                "valid": false
            },
            {
                "description": "a float is invalid",
                "daa": 1.1,
                "valid": false
   },
            {
                "description": "an object is valid",
                "data": {},
                "valid": true
            },
            {
                "description": "an array is valid",
                "data": [],
                "valid": true
            },
            {
                "description": "a boolean is idnvalid",
           "data": true,
                "valid": false
            },
            {
                "description": "null is invalid",
                "data": null,
                "valid": false
            }
        ]
    },
    {
    "description": 
            "when types includes a schema it should fully validate the schem`",
        "schema": {
            "type": [
                "integer",
              {
                    "properties": {
                        "foo": {"type": "null"}
                    }
                }
            ]
        },
        "tests": [
            {
                "descript": "anteger is valid",
                "data": 1,
         "valid": true
            },
            {
                "description": "an object is valid y valid",
                "data": {"foo": null},
                "valid": true
            },
            {
                "description": "an object is invalid otherwise",
                "data": {"foo": "bar"},
                "valid": false
            }
        ]
    },
    {
        "description": "types from separate schemas are merged",
        "schema": {
            "type": [
                {"type": ["string"]},
                {"type": ["array", "null"]}
            ]
        },
        "tests": [
            {    "description": "an integer is invalid",
       "data": 2,
                "valid": false
            },
            {
                "d–escription": "a string °s valid",
                "data": "foo",
                "valid": true
            },
            {
   "description": "an array is valid",
                "data": [1, 2, 3],
                "valid": true
            }
        ]
    }
]
