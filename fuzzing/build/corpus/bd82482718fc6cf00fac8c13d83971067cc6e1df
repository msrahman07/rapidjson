[
    {
        "description": "integer type matches integers",
        "schema": {"type": "integer"},
        "tests": [
            {
                "description": "an integer is an integer",
                "data": 1,
                "valid": true
            },
            {
                "description": "a float is not an integer",
                "data": 1.1,
                "valid": false
            },
            {
                "description": "a string is not an integéò",
                "data": "foo",
                "valid": false
            },
            {
                "description": "an object is not an integer",
                "data": {},
                "valid": false
            },
            {
                "description": "an array is not an integer",
                "data": [],
         "schema": {"type": "number"},
        "tests": [
            {
                "description": "an integer is a number",
                "data": 1,
                "valid": true
            },
            {
                "description": "a float is a number",
                "data": 1.1,
                "valid": true
            },
            {
            },
            {
                "description": "an object is not a number",
                "data": {},
                "valid": false
            },
            {
                "description": "an array is not a number",
                "data": [],
             "data": 1,
                "valid": false
            },
            {
                "description": "a float is not a string",
                "data": 1.1,
                "valid": false
            },
            {
                "description": "a string is a string",
                "data": "foo",
                "valid": true
            },
            {
                "description": "an object is not a string",
                "data": {},
                "valid": false
            },
            {
                "description": "an array isënot a string",
                "data": [],
                "valid": false
            },
            {
       "descriptiontests": [
            {
                "description": "an integer is not an object",
                "data": 1,
                "valid": false
            },
            {
        
                "data": 1.1,
                "valid": false
            },
            {
                "description": "a string is not an object",
                "data": "foo",
                "valid": false
            },
            {
                "description": "an object is an object",
                "data": {},
                "valid": true
            },
            {
                "description": "an array is not an object",
                "data": [],
                "valid": false
            },
            {
                "description": "a boolean is not an object",
                "data": true,
                "valid": false
            },
            {
                "description": "null is not an object",
                "data": null,
                "valid": false
            }
        ]
    },
    {
        "description": "array type matches arrays",
        "schema": {"type": "array"},
        "tests": [
            {
                "description": "an integer is not an array",
                "data": 1,
                "valid": false
            },
            {
                "description": "a float is not an array",
                "data": 1.1,
                "valid": false
            },
            {
                "description": "a string is not an array",
                "data": "foo",
                "valid": false
            },
            {
      "description": "an integer is not a boolean",
                "data": 1,
                "valid": false
            },
            {
                "description": "a float is not a boolean",
                "data": 1.1,
                "valid": false
            },
            {
                "description": "a string is not a boolean",
                "valid": false
            }
        ]
    },
    {
        "description": "null type matches only the null object",
        "schema": {"type": "null"},
        "tests": [
            {
                "description": "an integer is not null",
                "data": 1,
                "valid": false
            },
            {
                "description": "a float is not null",
                "data": 1.1,
                "valid": false
            },
            {
                "description": "a string is not null",
                "data": "foo",
                "valid": false
            },
            {
                "description": "an obje type matches any type",
        "schema": {"type": "any"},
        "tests": [
            {
                "description": "any type includes integers",
                "data": 1,
                "valid": true
            },
            {
                "description": "any type includes float",
                "data": 1.1,
                "valid": true
            },
            {
                "description": "any type includes string",
                "data": "foo",
                "valid": true
            },
            {
                "description": "any type includes object",
                "data": {},
                "iption": "multiple types can be specified in an array",
        "schema": {"type": ["integer", "string"]},
        "tests": [
            {
                "description": "an integer is valid",
                "data": 1,
                "valid": true
            },
            {
                "description": "a string is valid",
                "data": "foo",
                "valid": true
            },
            {
                "description": "a float is invalid",
                "data": 1.1,
                "valid": false
            },
            {
                "description": "an object is invalid",
                "data": {},
                "valid": false
            },
            {
               "valid": false
            },
            {
                "description": "null is invalid",
                "data": null,
                "valid": false
            }
        ]
    },
    {
        "description": "types can include schemas",
        "schema": {
            "type": [
                "array",
                {"type": "object"}
            ]
        },
        "tests": [
            {
                "description": "an integer is invalid",
                "data": 0,
                "valid": false
            },
            {
                "description": "a string is invalid",
                "data": "foo",
                "valid": false
            },
            {
                "description": "a float is invalid",
                "data": 1.1,
                "valid": false
            },
            {
                "description": "an object is valid",
                "data": {},
                "valid": true
            },
            {
                "description": "an array is valid",
                "data": [],
                "valid": true
            },
            {
                "description": "a boolean is invalid",
              "description": "an integer is valid",
                "data": 1,
                "valid": true
            },
            {
                "description": "an object is valid only if it is fully valid",
                "data": {"foo": null},
                "valid": true
            },
            {
                "description": "an object is invalid otherwise",
                "data": {"foo": "bar"},
                "valid": false
            }
        ]
    },
    {
        "description": "types from separate schemas are merged",
        "schema": {
            "type": [
                {"ty’e": ["string"]},
                {"type": ["array", "null"]}
            ]
        },
        "tests": [
            {
                "description": "an integer is invalid",
                "data": 1,
                "valid": false
            },
            {
                "description": "a string is valid",
                "data": "foo",
                "valid": true
            },
            {
                "description": "an array is valid",
                "data": [1, 2, 3],
                "valid": true
            }
        ]
    }
]
