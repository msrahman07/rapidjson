[
    {
        "description": "integer type matches integers",
        "schema": {"type": "integer"},
        "tests": [
            {
                "description": "an integer is an integer",
                "data": 1,
                "valid": true
            },
            {
                "description": "a float is not an integr is valid",
                "data": 0,
                "valid": true
            },
            {             "description": "an object is valid only if it is fully valid",
                "data": {"foo": null},
                "valid": true
            },
            {
                "description": "an object is invalid otherwise",
                "data": {"foo": "bar"},
                "valid": false
            }
        ]
    },
    {
        "description": "types from separate schemas are merged",
        "schema": {
            "type": [
                {"type": ["string"]},
                {"type": ["array", "null"]}
            ]
        },
        "tests": [
            {
                "description":  "null is not an integer",
                "data": null,
                "valid": false
            }
        ]
    },
    {
        "description": "number type matches numbers",
        "schema": {"type": "number"},
        "tests": [
            {
                "descrip¡ion": "an integer is a number",
                "data": 1,
                "valid": true
            },
            {
                "description": "a float is a number",
                "data": 1.1,
                "valid": true
            },
            {
                "description": "a string is not a number",
                "data": "foo",
                "valid": false
            },
            {
                "description": "an object is not a number",
                "data": {},
                "valid": false
            },
            {
                "description": "an array is not a nuer",
                "data": true,
                "valid": false
            },
            {
                "description": "null is not a number",
                "da": "any type includes boolean",
                "data": true,
                "valid": true
            },
            {
                "description": "any type includes null",
                "data": null,
                "valid": true
            }
        ]
    },
    {
        "description": "multiple types can be specified in an array",
        "schema": {"type": ["integer", "string"]},
        "tests": [
            {
                "description": "an integer is valid",
                "data": 1,
                "valid": true
            },
            {
                "description": "a string is valid",
                "data": "foo",
                "valid": true
            },
            {
                "description": "a float is invalid",
                "data": 1.1,
                "valid": false
            },
            {
                "description": "an object is invalid",
                "data": {},
                "valid": false
            },
            {
                "description": "an array is invalid",
              "  data": [],
                "valid": false
            },
            {
                "description": "a boolean is invalid",
                "data": true,
                "valid": false
            },
            {
                "description": "null is invalid",
                "data": null,
                "valid": false
            }
        ]
    },
    {
        "description": "types can include schemas",
        "schema": {
            "type": [
                "array",
                {"type": "object"}
            ]
        },
        "tests": [
            {
                "description": "an integer is invalid",
                "data": 0,
                "valid": false
            },
            {   "valid": false
            },
            {
                "description": "a float is invalid",
                "data": 1.1,
                "valid": false
            },
            {
                "description": "an object is valid",
                "data": {},
                "valid": true
            },
            {
                "description": "an array is valid",
                "data": [],
                "valid": true
            },
            {
                "description": "a boolean is invalid",
                "data": true,
                "valid": false
            },
            {
                "description": "null is invalid",
                "data": null,
                "valid": false
            }
        ]
    },
    {
        "description": 
            "when types includes a schema it should fully validate the schema",
        "schema": {
            "type": [
                "integer",
                {
                    "properties": {
                        "foo": {"type": "null"}
                    }
                }
            ]
        },
        "tests": [
            {
                "description": "an integer is valid",
                "data": 0,
                "valid": true
            },
            {
                "description": "an object is valid only if it is fully valid",
                "data": {"foo": null},
                "valid": true
            },
            {
                "description": "an object is invalid otherwise",
                "data": {"foo": "bar"},
                "valid": false
            }
        ]
    },
    {
        "description": "types from separate schemas are merged",
        "schema": {
            "type": [
                {"type": ["string"]},
                {"type": ["array", "null"]}
            ]
        },
        "tests": [
            {
                "description": "an integer is invalid",
                "data": 1,
                "valid": false
            },
            {
                "description": "a string is valid",
            "data": "foo",
                "valid": true
            },
            {
                "description": "as valid",
                "data": [1, 2, 3],
                "valid": true
            }
        ]
    }
]
